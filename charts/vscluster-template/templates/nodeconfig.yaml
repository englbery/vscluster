apiVersion: rke-machine-config.cattle.io/v1
kind: VmwarevsphereConfig
metadata:
  name: {{ .Values.cluster.name }}-nodes
  namespace: fleet-default
cloneFrom: /Datacenter/vm/rocky8-template
cloudConfig: |
    #cloud-config
    write_files:
      - path: /root/configure-networking.sh
        content: |
          #!/bin/bash
          SnIf1=24
          SnIf2=24
          uuidens192=$(nmcli connection show|grep "ens33"|awk '{print $(NF-2)}')
          uuidens224=$(nmcli connection show|grep "ens34"|awk '{print $(NF-2)}')
          vmtoolsd --cmd 'info-get guestinfo.ovfEnv' > /tmp/ovfenv
          # Interface 1
          IPAddressIf1=$(sed -n 's/.*Property oe:key="guestinfo.interface.0.ip.0.address" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
          IPAddressIf2=$(sed -n 's/.*Property oe:key="guestinfo.interface.1.ip.0.address" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
          GatewayIf1=$(sed -n 's/.*Property oe:key="guestinfo.interface.0.route.0.gateway" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
          DNSS=$(sed -n 's/.*Property oe:key="guestinfo.dns.servers" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
          ips=(${IPAddressIf1} ${IPAddressIf2})
          gateways=(${GatewayIf1} "")
          dns=(${DNSS} "")

          readarray -t devices < <(nmcli -g GENERAL.CONNECTION device show | grep -v "^$")
          uuids=()

          if [ ${#ips[*]} -ne ${#gateways[*]} ] || [ ${#ips[*]} -ne ${#dns[*]} ]
          then
            echo "amount of values for ips gateways and dns not equal"
            exit 1
          fi
          if [ ${#ips[*]} -ne ${#devices[*]} ]
          then
            echo "amount of devices does not match with given amount of configurations!"
            echo "Devices: ${#devices[*]}"
            echo "Configurations: ${#ips[*]}"
            exit 1
          fi
          for index in "${!devices[@]}";
          do
            uuids[$index]=$(nmcli -g connection.uuid connection show $devices)
            echo "$index -> ${devices[$index]} -> ${uuids[$index]}"
            if [ ! -z ${ips[$index]} ]
            then
              sudo nmcli connection modify ${uuids[$index]} ipv4.address ${ips[$index]}/24
            fi
            if [ ! -z ${gateways[$index]} ]
            then
              sudo nmcli connection modify ${uuids[$index]} ipv4.gateway ${gateways[$index]}
            fi
            if [ ! -z "${dns[$index]}" ]
            then
              sudo nmcli connection modify ${uuids[$index]} ipv4.dns "${dns[$index]}"
            fi
              sudo nmcli connection modify ${uuids[$index]} ipv4.method manual
              sudo nmcli connection modify ${uuids[$index]} ipv6.method disabled
              sudo nmcli connection up ${uuids[$index]}
          done
          sudo systemctl restart NetworkManager
          sudo hostnamectl set-hostname VALE-NO-${ips[0]##*.}
    runcmd:
      - bash /root/configure-networking.sh
cpuCount: "0"
creationType: template
datacenter: /Datacenter
datastore: /Datacenter/datastore/Profile_004_NFS_DS
diskSize: "0"
folder: /Datacenter/vm/Rancher-Deployment
memorySize: "0"
network:
  - /Datacenter/network/VL-115
  - /Datacenter/network/VL-899
pool: /Datacenter/host/Test-Cluster/Resources/Rancher-Deployment
sshPort: "22"
sshUserGroup: staff
vappIpallocationpolicy: fixedAllocated
vappIpprotocol: IPv4
vappProperty:
  - guestinfo.interface.0.ip.0.address=ip:VL-115
  - guestinfo.interface.0.route.0.gateway=${gateway:VL-115}
  - guestinfo.dns.servers=${dns:VL-115}
  - guestinfo.interface.1.ip.0.address=ip:VL-899
vappTransport: com.vmware.guestInfo
vcenterPort: "443"